name: Build and deploy Docker images

on:
  workflow_dispatch:
    inputs:
      latest:
        description: 'Create latest tag'
        required: true
        type: boolean
        default: true
  schedule:
    - cron: "0 6 * * *"

jobs:
  matrix-prep-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Task
        uses: arduino/setup-task@v1

      - name: Get releases
        id: axTags
        run: task get-missing-artifacts

      - name: Show missing releases
        run: echo ${{ steps.axTags.outputs.axelorTag }}

    outputs:
      axTags: ${{ steps.axTags.outputs.axelorTag }}

  docker:
    runs-on: ubuntu-latest
    needs:
      - matrix-prep-config
    if: ${{ needs.matrix-prep-config.outputs.axTags != '' && toJson(fromJson(needs.matrix-prep-config.outputs.axTags)) != '[]' }}
    strategy:
      matrix:
        axTag: ${{ fromJSON(needs.matrix-prep-config.outputs.axTags) }}
    steps:
      - name: Version to deploy on Docker Hub
        run: echo "${{ matrix.axTag }}"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Task
        uses: arduino/setup-task@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Use default OR workflow dispatch value
        run: |
          if [[ ${{ github.event_name == 'workflow_dispatch' }} == true ]]; then
            USE_LATEST=${{ inputs.latest }}
          else
            USE_LATEST=true
          fi
          echo "USE_LATEST=$USE_LATEST" >> $GITHUB_ENV

      - name: Calculate Docker meta information
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            pmoscode/axelor-open-suite
          flavor: |
            latest=${{ env.USE_LATEST }}
          tags: |
            type=semver,pattern=v{{version}},value=${{ matrix.axTag }}
            type=semver,pattern=v{{major}}.{{minor}},value=${{ matrix.axTag }}
            type=semver,pattern=v{{major}},value=${{ matrix.axTag }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Axelor .war release
        run: task get-artifact -- ${{ matrix.axTag }}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  docker-description:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v3
        with:
          readme-filepath: README-DOCKER-HUB.md
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN_FULL }}
          repository: pmoscode/axelor-open-suite
