name: Build and deploy Docker images

on:
  workflow_dispatch:
#  schedule:
#    - cron: "0 3 * * *"

jobs:
  matrix-prep-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Task
        uses: arduino/setup-task@v1

      - name: Get releases
        id: axTags
        run: task get-missing-artifacts
    outputs:
      axTags: ${{ toJSON(steps.axTags.outputs.axelorTag) }}

  docker:
    runs-on: ubuntu-latest
    needs:
      - matrix-prep-config
    strategy:
      matrix:
        axTag: ${{ fromJSON(needs.matrix-prep-config.outputs.axTags) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            pmoscode/axelor-open-suite
          tags: |
            type=semver,pattern=v{{version}},value=${{ matrix.axTag }}
            type=semver,pattern=v{{major}}.{{minor}},value=${{ matrix.axTag }}
            type=semver,pattern=v{{major}},value=${{ matrix.axTag }}

      - name: Echo it
        run: echo "Version to tag -> ${{ matrix.axTag }} ## ${{ steps.meta.outputs.tags }}"

#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Setup Task
#        uses: arduino/setup-task@v1
#
#      - name: Get latest Axelor .war release
#        run: task get-artifact -- ${{github.ref_name}}
#
#      - name: Build and push
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
